// http://ionicframework.com/docs/theming/


// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.



* {
    font-weight: bold;
}

html, body,
.app-root,
.ion-page,
.content {
    background-color: color($md-palette, md-black);
    color: color($md-palette, md-white);
}

.no-scroll .scroll-content{
    margin-top: 0px !important;
    margin-bottom: 0px !important;
    padding-top: 0px !important;
    padding-bottom: 0px !important;
    top: 0 !important;
    bottom: 0 !important;
    height: 100% !important;
    // overflow: visible !important;
    overflow-y: auto !important;
}

ion-footer, .footer, .footer-md {
    background-color: transparent !important;
}

.toolbar-background {
    background-color: transparent !important;
}

.header-md::after {
    background-image: none !important;
}

.footer-md::before {
    background-image: none !important;
}

html {
    font-size: 1rem;
}

button {
    text-transform: none !important;
}

.centered {
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
}

@mixin button-hover($bg, $fg, $bd:10, $fd:10) {
    background-color: $bg;
    border-bottom: 0.5rem solid darken($bg, $bd) !important;
    color: $fg;
    & span {
       color: $fg;
    };
    &:disabled {
       opacity: 0.0;
    }
    &:hover {
        background-color: lighten($bg, $fd) !important;
        border-bottom: 0.25rem solid darken($bg, $bd) !important;
    }
    &.semi-disabled {
        opacity: 0.5;
        & span {
            color: darken($bg, $bd);
        };
        &:hover {
            background-color: $bg !important;
            border-bottom: 0.5rem solid darken($bg, $bd) !important;
        }
    }
}

@mixin hover-box-shadow ($cl) {
    &:hover {
        box-shadow: 0px 0px 30px $cl !important;
        transition: none !important;
    }
    &.semi-disabled:hover {
        box-shadow: none;
    }
}

@mixin border() {
    border-top: $spinner-border solid color($md-palette, md-red);
    border-left: $spinner-border solid color($md-palette, md-orange);
    border-right: $spinner-border solid color($md-palette, md-light-green);
    border-bottom: $spinner-border solid color($md-palette, md-light-blue);
}

// .md-button {
//     padding: 0 6px 0 6px;
//     margin: 6px 8px 6px 8px;
//     min-width: 88px;
//     border-radius: 3px;
//     font-size: 14px;
//     text-align: center;
//     text-transform: uppercase;
//     text-decoration:none;
//     border: none;
//     outline: none;
//   }

.button-primary {
    background-color: color($colors, primary);
    color: color($md-palette, md-white);
}

$spinner-size: 50px;
$spinner-time: 2s;
$spinner-border: 10px;

@keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg)
    }
  }

.loader {
    width: 100%;
    height: 100%;
    margin: auto;
    text-align: center;
    align-items: center;
    justify-content: center;
    display: flex;

    .spinner {
      border-radius: 50%;
      border-top: $spinner-border solid color($md-palette, md-red);
      border-left: $spinner-border solid color($md-palette, md-orange);
      border-right: $spinner-border solid color($md-palette, md-light-green);
      border-bottom: $spinner-border solid color($md-palette, md-light-blue);
      width: $spinner-size !important;
      height: $spinner-size !important;
      margin: $spinner-size / 4;
      animation: spin $spinner-time linear infinite;
    }
  }

.error {
    color: color($colors, danger);
}


.alert {
    color: color($md-palette, md-black);
    * {
        font-weight: bold;
        line-height: 1.5;
    }
    button {
        display: flex;
        align-items: center;
        justify-content: center;
        span {
            width: auto;
            color: color($md-palette, md-white);
            line-height: 1;
        }
        width: 5rem;
    }
    button:first-of-type {
        background: color($colors, primary);
    }
    button:last-of-type {
        background: color($colors, danger);
    }
    .alert-wrapper {
        border-radius: 2rem !important;
        border-top: $spinner-border solid color($md-palette, md-red);
        border-left: $spinner-border solid color($md-palette, md-orange);
        border-right: $spinner-border solid color($md-palette, md-light-green);
        border-bottom: $spinner-border solid color($md-palette, md-light-blue);
        padding-bottom: 1rem;
    }
    .alert-head {
        padding-top: 1rem;
    }
    .alert-title {
        text-align: center;
    }
}

.calvin-logo {
    display: inline-block;
    span:nth-child(1) {
        color: color($md-palette, md-red);
    }
    span:nth-child(2) {
        color: color($md-palette, md-light-green);
    }
    span:nth-child(3) {
        color: color($md-palette, md-light-blue);
    }
    span:nth-child(4) {
        margin-left: -0.125ex;
        color: color($md-palette, md-amber);
        margin-right: 0.125ex;
    }
    span:nth-child(5), span:nth-child(6) {
        color: color($md-palette, md-purple);
    }
}

@keyframes Blink {
    0% { transform: scaleY(1) }
   33% { transform: scaleY(1) }
   34% { transform: scaleY(0.1) }
   35% { transform: scaleY(1) }
   75% { transform: scaleY(1) }
   76% { transform: scaleY(0.1) }
   77% { transform: scaleY(1) }
   81% { transform: scaleY(1) }
   82% { transform: scaleY(0.1) }
   83% { transform: scaleY(1) }
  100% { transform: scaleY(1) }
}

.avatar-calvin {
    .head, .ear {
        fill: color($md-palette, md-amber);
    }
    .neck, .ear-hole, .lips {
        fill: color($md-palette, md-amber-700);
    }
    .arms {
        fill: color($md-palette, md-red-800);
    }
    .chest {
        fill: color($md-palette, md-red);
    }
    .hair {
        fill: color($md-palette, md-brown);
    }
    .eye {
        fill: color($md-palette, md-blue-grey-900);
    }
    .eye {
        transform-origin: 230.28571px 172.79071px;
        animation: Blink 10s infinite;
    }
}

.avatar-emma {
    .head, .ear {
        fill: color($md-palette, md-brown-600);
    }
    .neck, .ear-hole, .lips {
        fill: color($md-palette, md-brown-800);
    }
    .arms {
        fill: color($md-palette, md-amber-800);
    }
    .chest {
        fill: color($md-palette, md-amber);
    }
    .hair {
        fill: color($md-palette, md-grey-900);
    }
    .eye {
        fill: color($md-palette, md-blue-grey-900);
    }
    .eye {
        transform-origin: 230.28571px 172.79071px;
        animation: Blink 10s infinite;
        animation-delay: 3s;
    }
}

.avatar-dan {
    .head, .ear {
        fill: color($md-palette, md-brown-600);
    }
    .neck, .ear-hole, .lips {
        fill: color($md-palette, md-brown-800);
    }
    .arms {
        fill: color($md-palette, md-light-green-900);
    }
    .chest {
        fill: color($md-palette, md-light-green-700);
    }
    .hair {
        fill: color($md-palette, md-grey-900);
    }
    .eye {
        fill: color($md-palette, md-blue-grey-900);
    }
    .eye {
        transform-origin: 230.28571px 172.79071px;
        animation: Blink 9s infinite;
        animation-direction: reverse;
        animation-delay: 4s;
    }
}

.avatar-kerry {
    .head, .ear {
        fill: color($md-palette, md-pink-100);
    }
    .neck, .ear-hole, .lips {
        fill: color($md-palette, md-pink-200);
    }
    .arms {
        fill: color($md-palette, md-light-blue-800);
    }
    .chest {
        fill: color($md-palette, md-light-blue);
    }
    .hair {
        fill: color($md-palette, md-orange-900);
    }
    .eye {
        fill: color($md-palette, md-blue-grey-900);
    }
    .eye {
        transform-origin: 230.28571px 172.79071px;
        animation: Blink 10s infinite;
        animation-delay: 1s;
    }
}

.avatar-mark {
    .head, .ear {
        fill: color($md-palette, md-pink-100);
    }
    .neck, .ear-hole, .lips {
        fill: color($md-palette, md-pink-200);
    }
    .arms {
        fill: color($md-palette, md-purple-800);
    }
    .chest {
        fill: color($md-palette, md-purple);
    }
    .hair {
        fill: color($md-palette, md-yellow);
    }
    .eye {
        fill: color($md-palette, md-blue-grey-900);
    }
    .eye {
        transform-origin: 230.28571px 172.79071px;
        animation: Blink 9s infinite;
        animation-direction: reverse;
        animation-delay: 2s;
    }
}



$media-width-medium: 1024px;
$media-height-medium: 768;

@media screen and (width: $media-width-medium) {

    ion-list {
        width: 768px;
    }
}


ion-content {
    max-width: 40rem;
    margin-left: calc(50% - 20rem);
    .navigate-button, .keyword-control-button, .view-button {
        width: 4rem;
        height: 4rem;
        font-size: 1.25rem;
    }
    .keyword-button {
        height: 4rem;
        width: 100%;
        font-size: 2rem;
    }
    .image-container, .video-player-container {
        width: 25rem;
        height: 25rem;
    }
}
// ion-content {
//     width: calc(100vh / 1.25) !important;
//     margin-left: calc(50vw - 50vh / 1.25);
// }

// .video-player-container, .image-container {
//     width: calc(90vh / 1.5);
//     height: calc(90vh / 1.5);
// }

// .keyword-button {
//     height: 10vh;
//     .keyword-display {
//     font-size: 5vh;
//     }
// }

// .keyword-control-button, .view-button {
//     width: 10vh;
//     height: 10vh;
//     font-size: 3.333vh;
// }

// .navigate-button {
//     width: 10vh;
//     height: 10vh;
//     font-size: 3.333vh;
// }
